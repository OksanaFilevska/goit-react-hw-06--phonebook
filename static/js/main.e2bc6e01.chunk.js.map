{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactsAction","addContact","createAction","payload","name","number","id","shortid","generate","deleteContact","changeFilter","contactsLocale","localStorage","getItem","parsedContacts","JSON","parse","initialContacts","items","createReducer","contactsActions","state","some","contact","includes","alert","addContacts","window","setItem","stringify","deleteContacts","filter","_","action","combineReducers","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Container","children","className","s","container","ContactForm","useState","setName","setNumber","dispatch","useDispatch","handleChange","event","target","value","nameInputId","numberInputId","reset","form","onSubmit","e","preventDefault","htmlFor","span","input","type","onChange","pattern","title","required","btn","ContactList","useSelector","normalizedFilter","toLowerCase","trim","getVisibleContacts","map","item","btnList","onClick","filterInputId","Filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2bc6e01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1L8hO\",\"item\":\"ContactList_item__11Hl5\",\"contacts\":\"ContactList_contacts__1bON3\",\"btnList\":\"ContactList_btnList__a87Zk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1myme\",\"span\":\"Filter_span__2yyGB\",\"input\":\"Filter_input__2SZiQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Y9_t\"};","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\r\n  payload: {\r\n    name,\r\n    number,\r\n    id: shortid.generate(),\r\n  },\r\n}));\r\nconst deleteContact = createAction('contacts/delete');\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst contactsAction = { addContact, deleteContact, changeFilter };\r\nexport default contactsAction;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contacts-actions';\r\n\r\nconst contactsLocale = localStorage.getItem('contacts');\r\nconst parsedContacts = JSON.parse(contactsLocale);\r\nconst initialContacts = parsedContacts ? parsedContacts : [];\r\nconst add = (state, { payload }) => {\r\n  if (state.some(contact => contact.name.includes(payload.name))) {\r\n    alert(`${payload.name} is already in contacts!`);\r\n    return state;\r\n  }\r\n\r\n  const addContacts = [...state, payload];\r\n  window.localStorage.setItem('contacts', JSON.stringify(addContacts));\r\n  return addContacts;\r\n};\r\n\r\nconst delet = (state, { payload }) => {\r\n  const deleteContacts = [...state.filter(contact => contact.id !== payload)];\r\n  window.localStorage.setItem('contacts', JSON.stringify(deleteContacts));\r\n  return deleteContacts;\r\n};\r\n\r\nconst items = createReducer(initialContacts, {\r\n  [contactsActions.addContact]: add,\r\n  [contactsActions.deleteContact]: delet,\r\n});\r\nconst filter = createReducer('', {\r\n  [contactsActions.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  // const contacts = useSelector(state => state.contacts.items);\r\n  const dispatch = useDispatch();\r\n  const addContact = (name, number) => dispatch(contactsActions.addContact(name, number));\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    addContact(contact);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>\r\n        <span className={s.span}>Name</span>\r\n\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label htmlFor={numberInputId}>\r\n        <span className={s.span}>Number</span>\r\n\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          id={numberInputId}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n\r\n      <button className={s.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from './ContactList.module.css';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase().trim();\r\n\r\n  return contacts.filter(\r\n    contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter) || contact.number.includes(filter),\r\n  );\r\n};\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(({ contacts: { items, filter } }) =>\r\n    getVisibleContacts(items, filter),\r\n  );\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <ul className=\"s.list\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n          <p className=\"s.contacts\">\r\n            {name}: <span>{number}</span>\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            className={s.btnList}\r\n            onClick={() => dispatch(contactsActions.deleteContact(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport shortid from 'shortid';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst filterInputId = shortid.generate();\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(state => state.filter);\r\n\r\n  const dispatch = useDispatch();\r\n  const changeFilter = e => dispatch(contactsActions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label htmlFor={filterInputId}>\r\n      <span className={s.span}>Find contacts by name and number</span>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={changeFilter}\r\n        id={filterInputId}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import './App.css';\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2rgSB\",\"input\":\"ContactForm_input__1CA5-\",\"span\":\"ContactForm_span__24Pa0\",\"btn\":\"ContactForm_btn__3boHW\"};"],"sourceRoot":""}